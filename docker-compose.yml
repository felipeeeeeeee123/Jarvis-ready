# JARVIS v3.0 Docker Compose Configuration
version: '3.8'

services:
  jarvis:
    build: .
    container_name: jarvis-v3
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/backend
      - DATABASE_URL=sqlite:///./data/jarvis.db
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./blueprints:/app/blueprints
      - ./simulations:/app/simulations
      - ./models:/app/models
      - jarvis_backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - jarvis-network

  # API server (separate from main application)
  jarvis-api:
    build: .
    container_name: jarvis-api
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app/backend
      - DATABASE_URL=sqlite:///./data/jarvis.db
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: ["python", "backend/server.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - jarvis
    networks:
      - jarvis-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: jarvis-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - jarvis-network
    command: redis-server --appendonly yes

  # Backup service
  backup:
    build: .
    container_name: jarvis-backup
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/backend
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - jarvis_backups:/app/backups
    command: ["python", "scripts/backup_service.py"]
    depends_on:
      - jarvis
    networks:
      - jarvis-network

  # Ollama service (optional - can use external)
  ollama:
    image: ollama/ollama:latest
    container_name: jarvis-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - jarvis-network
    environment:
      - OLLAMA_HOST=0.0.0.0

volumes:
  redis_data:
    driver: local
  ollama_data:
    driver: local
  jarvis_backups:
    driver: local

networks:
  jarvis-network:
    driver: bridge